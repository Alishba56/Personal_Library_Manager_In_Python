{
    "name": "My Personal Library",
    "books": [
        {
            "title": "my jungle ",
            "author": "alishba",
            "isbn": "11",
            "genre": "11",
            "year": 2014,
            "publisher": "m.ali",
            "pages": 20,
            "description": "Personal Library",
            "location": "Shelf",
            "status": "Borrowed",
            "rating": 2,
            "date_added": "2025-03-13",
            "borrowed_by": "my",
            "borrowed_date": "2025-03-13",
            "due_date": "2025-03-27",
            "tags": [
                "conple",
                "readonly"
            ]
        },
        {
            "title": "myy",
            "author": "neha",
            "isbn": "qq",
            "genre": "nn",
            "year": 2016,
            "publisher": "ali",
            "pages": 10,
            "description": "\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\u2714 Encapsulation: Divides functionality into reusable functions.\n\u2714 Efficiency: Uses re.sub() for word replacement, making it safer and more accurate.\n\u2714 Error Handling: Ensures valid input before processing.\n\u2714 Better UI/UX: Improves session state handling and structured display of statistics.\n\u2714 Readability: Uses consistent naming conventions and clear comments.\n\n",
            "location": "Shelf",
            "status": "Available",
            "rating": null,
            "date_added": "2025-03-13",
            "borrowed_by": "",
            "borrowed_date": "",
            "due_date": "",
            "tags": [
                "all"
            ]
        }
    ]
}